<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>STM32开发环境倒腾</title>
    <link href="/2022/01/17/stm32_environment/"/>
    <url>/2022/01/17/stm32_environment/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="platformio倒腾记录">PlatformIO倒腾记录</h2><ul><li><p>保姆级别经验文档：<a href="https://www.skyvocality.top/index.php/2021/10/11/%e4%bd%bf%e7%94%a8platformiocubemxhal%e5%bc%80%e5%8f%91stm32/">sky_vocality</a></p></li><li><p>PlatformIO官方文档：<a href="https://docs.platformio.org/en/latest/">PlatformIO</a></p></li><li><p>代码格式化Astyle：<a href="http://astyle.sourceforge.net/astyle.html">Astyle官网文档</a>，vscode可直接安装插件，安装完后按照vscode里面的说明配置</p></li><li><p>贴一下我现在的vscode，nice!!!</p><p><img src="https://gitee.com/blackerrr/photos/raw/master/photo/vscode.jpg" alt="我超爱现在的Vscode" /></p></li></ul><h2 id="clion-倒腾记录">CLION 倒腾记录</h2><ul><li><p>倒腾主要参考文档: <a href="https://zhuanlan.zhihu.com/p/145801160">稚晖君的教程</a></p></li><li><p>clion倒腾stm32如果去看官网文档的话，官网里的写的大多数都不适用，可能是clion版本的问题(毕竟没钱用正版，不可能用最新版的clion)，有用的还是别人的经验文档。</p></li><li><p>如果用openocd烧录的话，需要将jlink 驱动更新为winusb（使用zadig）。但更新后其他软件就无法识别jlink了，比如keil。目前我还没有找到解决方法，暂时记录一下。Zadig软件下载地址： <a href="https://zadig.akeo.ie/">Zadig</a></p><p><img src="https://gitee.com/blackerrr/photos/raw/master/photo/jlink.jpg" alt="jlink更改驱动" /></p></li><li><p>使用clion需要自己写配置文件，比如<code>jlink.cfg</code></p></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># choose st-link/j-link/dap-link etc.</span><br><span class="hljs-comment">#adapter driver cmsis-dap</span><br><span class="hljs-comment">#transport select swd</span><br>source [<span class="hljs-builtin-name">find</span> interface/jlink.cfg]<br>transport select swd<br><br><span class="hljs-comment"># 0x10000 = 64K Flash Size</span><br><span class="hljs-comment"># set FLASH_SIZE 0x80000</span><br><br>source [<span class="hljs-builtin-name">find</span> target/stm32f1x.cfg]<br><span class="hljs-comment"># download speed = 10MHz</span><br><br><span class="hljs-comment"># adapter speed 1000</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>STM32</category>
      
    </categories>
    
    
    <tags>
      
      <tag>嵌入式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>clion 倒腾stm32开发</title>
    <link href="/2022/01/16/clion-stm32/"/>
    <url>/2022/01/16/clion-stm32/</url>
    
    <content type="html"><![CDATA[<h1 id="clion-倒腾记录">CLION 倒腾记录</h1><ul><li><p>倒腾主要参考文档: <a href="https://zhuanlan.zhihu.com/p/145801160">稚晖君的教程</a></p></li><li><p>clion倒腾stm32如果去看官网文档的话，官网里的写的大多数都不适用，可能是clion版本的问题(毕竟没钱用正版，不可能用最新版的clion)，有用的还是别人的经验文档。</p></li><li><p>如果用openocd烧录的话，需要将jlink 驱动更新为winusb。但更新后其他软件就无法识别jlink了，比如keil。目前我还没有找到解决方法，暂时记录一下。Zadig软件下载地址： <a href="https://zadig.akeo.ie/">Zadig</a></p><p><img src="https://gitee.com/blackerrr/photos/raw/master/photo/jlink.jpg" alt="jlink更改驱动" /></p></li><li><p>使用clion需要自己写配置文件，比如<code>jlink.cfg</code></p></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># choose st-link/j-link/dap-link etc.</span><br><span class="hljs-comment">#adapter driver cmsis-dap</span><br><span class="hljs-comment">#transport select swd</span><br>source [<span class="hljs-builtin-name">find</span> interface/jlink.cfg]<br>transport select swd<br><br><span class="hljs-comment"># 0x10000 = 64K Flash Size</span><br><span class="hljs-comment"># set FLASH_SIZE 0x80000</span><br><br>source [<span class="hljs-builtin-name">find</span> target/stm32f1x.cfg]<br><span class="hljs-comment"># download speed = 10MHz</span><br><br><span class="hljs-comment"># adapter speed 1000</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>STM32</category>
      
    </categories>
    
    
    <tags>
      
      <tag>嵌入式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派倒腾记录</title>
    <link href="/2022/01/15/raspberry/"/>
    <url>/2022/01/15/raspberry/</url>
    
    <content type="html"><![CDATA[<h1 id="记录一下树莓派倒腾记录">记录一下树莓派倒腾记录</h1><ul><li><p>树莓派是在大三上买的，买回来之后，玩了一周，就一直吃灰。现在趁寒假，准备好好的折腾一番。（2022年1月15日）</p></li><li><p>一月十四日晚重新折腾了一下，基本算是重新开始。算是将树莓派基本的东西弄好了：sd卡镜像烧录，联网，更改用户名和密码，换源，vim配置，软件更新，顺便试了一下摄像头。bingo</p></li><li><p>记录一下树莓派开启监控</p><ol type="1"><li>参考文章:<a href="https://dsx2016.com/?p=1853">大师兄的文章</a></li><li>配置文件位置 /etc/motion/motion.conf</li><li>视频存放位置 /etc/lib/motion/</li><li>如何看监控 http://192.168.0.103:8081/, 具体端口号是在motion.conf里设置的</li></ol></li><li><p>vim插件管理: Plug</p><ol type="1"><li>参考文章： <a href="https://github.com/junegunn/vim-plug">vim-plug</a></li></ol></li><li><p>树莓派操控gpio</p><ol type="1"><li>参考文章：<a href="https://www.waveshare.net/study/article-600-1.html">微雪课堂</a>，里面介绍了两种方式，shell脚本和C语言。</li></ol></li></ul>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
    <tags>
      
      <tag>嵌入式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PowerShell 美化</title>
    <link href="/2022/01/06/on-my-posh/"/>
    <url>/2022/01/06/on-my-posh/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="powershell-美化">PowerShell 美化</h1><h2 id="我的powershell">我的PowerShell</h2><p><img src="https://gitee.com/blackerrr/photos/raw/master/my-beautiful-powershell.jpg" alt="我的powershell" /></p><h3 id="如何实现">如何实现</h3><p>实现上面的效果，你需要知道：</p><ul><li><p>windows terminal: <a href="https://docs.microsoft.com/en-us/windows/terminal/">Micosoft windows terminal docs</a></p></li><li><p>oh-my-posh: <a href="https://ohmyposh.dev/">oh-my-posh</a></p></li><li><p>posh-git: <a href="https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-PowerShell">posh-git</a></p></li></ul><h3 id="主题推荐">主题推荐</h3><ul><li><p>这里推荐的5个主题都不错： <a href="https://sspai.com/post/52907">少数派的5个主题</a></p></li><li><p>我的主题是Agnoster，非常nice</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>PowerShell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Winget</title>
    <link href="/2022/01/06/winget/"/>
    <url>/2022/01/06/winget/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="winget">winget</h1><h2 id="问题一failed-in-attempting-to-update-the-source">问题一：Failed in attempting to update the source</h2><ul><li>解决方法 <code>winget source reset --force</code></li><li>我解决这个问题看的文章：<a href="https://github.com/microsoft/winget-cli/issues/1656">github issue1656</a></li><li>winget 官方帮助页面：<a href="https://aka.ms/winget-command-source">winget帮助页面</a></li></ul><h2 id="安装软件步骤以gsudo为例">安装软件步骤（以gsudo为例）</h2><ol type="1"><li><p>先用 <code>winget search</code> 找到包准确的名字</p></li><li><p><code>winget install</code> 安装，-<code>l</code> 是 --<code>location</code>的简写，指自定义文件夹</p></li><li><p>如下图所示，因为<code>gsudo</code>我已经装过了，我就不运行第二个命令了</p><p><img src="https://gitee.com/blackerrr/photos/raw/master/winget.jpg" /></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 虚拟环境管理</title>
    <link href="/2022/01/03/python-virtual-env/"/>
    <url>/2022/01/03/python-virtual-env/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ol type="1"><li><h1 id="使用虚拟环境的好处">使用虚拟环境的好处</h1><p>刚开始接触<code>python</code>，虚拟环境搞的我是云里雾里的，电脑里虚拟环境的管理也很乱。我记得的是在大二上用<code>python</code>搞数据库时，发现包与包之前会互相冲突。如果所有的项目都用一个环境，那包与包之间的冲突肯定是不可避免的。如果你为每一个项目都创建一个虚拟环境，做好环境隔离就可以解决这个问题。</p><p>所以，关于虚拟环境的使用，我的建议是，一个<code>Pycharm</code>项目对应一个虚拟环境。</p></li><li><h1 id="python-3.9-虚拟环境管理"><code>Python 3.9</code> 虚拟环境管理</h1><ul><li><p><code>venv</code> 管理虚拟环境。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> D:\venv<span class="hljs-literal">-demo</span>&gt; <span class="hljs-variable">$PSVersionTable</span><br><br>Name                           Value<br>----                           -----<br>PSVersion                      <span class="hljs-number">7.2</span>.<span class="hljs-number">1</span><br>PSEdition                      Core<br>GitCommitId                    <span class="hljs-number">7.2</span>.<span class="hljs-number">1</span><br>OS                             Microsoft Windows <span class="hljs-number">10.0</span>.<span class="hljs-number">19044</span><br>Platform                       Win32NT<br>PSCompatibleVersions           &#123;<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>…&#125;<br>PSRemotingProtocolVersion      <span class="hljs-number">2.3</span><br>SerializationVersion           <span class="hljs-number">1.1</span>.<span class="hljs-number">0.1</span><br>WSManStackVersion              <span class="hljs-number">3.0</span><br><br><span class="hljs-built_in">PS</span> D:\venv<span class="hljs-literal">-demo</span>&gt; py <span class="hljs-literal">-m</span> venv env<br><span class="hljs-built_in">PS</span> D:\venv<span class="hljs-literal">-demo</span>&gt; ll<br><br>    Directory: D:\venv<span class="hljs-literal">-demo</span><br><br>Mode                 LastWriteTime         Length Name<br>----                 -------------         ------ ----<br>d----            <span class="hljs-number">2022</span>/<span class="hljs-number">1</span>/<span class="hljs-number">3</span>    <span class="hljs-number">21</span>:<span class="hljs-number">05</span>                env<br><br><span class="hljs-built_in">PS</span> D:\venv<span class="hljs-literal">-demo</span>&gt; .\env\Scripts\Activate.ps1<br>(env) <span class="hljs-built_in">PS</span> D:\venv<span class="hljs-literal">-demo</span>&gt; deactivate<br><span class="hljs-built_in">PS</span> D:\venv<span class="hljs-literal">-demo</span>&gt;<br></code></pre></td></tr></table></figure><p>若使用的是<code>cmd</code>而不是<code>PowerShell</code>，则激活方式如下：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">D:<span class="hljs-symbol">\v</span>env-demo&gt;env<span class="hljs-symbol">\S</span>cripts<span class="hljs-symbol">\a</span>ctivate.bat<br></code></pre></td></tr></table></figure><p>退出同样使用<code>deactivate</code></p></li><li><p><code>python venv</code>官方文档 ： <a href="https://docs.python.org/zh-cn/3/library/venv.html#module-venv"><code>venv</code></a></p></li><li><p><a href="https://www.cnblogs.com/chenhuabin/p/10538773.html">一篇关于python虚拟环境管理的博客</a></p></li></ul></li><li><h1 id="anaconda-虚拟环境管理"><code>Anaconda</code> 虚拟环境管理</h1><ol type="1"><li><p><code>powershell</code> 激活虚拟环境失败问题：<a href="https://www.cnblogs.com/dereen/p/ps_conda_env.html">Dereen's Blog</a></p></li><li><p>查看本机虚拟环境</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">conda</span> <span class="hljs-literal">info</span> -e  或<br>conda env list<br></code></pre></td></tr></table></figure></li><li><p>创建虚拟环境，<code>-n</code>指<code>name</code>，<code>-p</code>指路径</p></li></ol><p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">conda</span> create -n myenv python=<span class="hljs-number">3</span>.<span class="hljs-number">8</span>  或<br><span class="hljs-attribute">conda</span> create -p pathdir python=<span class="hljs-number">3</span>.<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure></p><ol start="4" type="1"><li><p>激活虚拟环境</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda <span class="hljs-built_in">activate</span> myenv<br></code></pre></td></tr></table></figure></li><li><p>退出虚拟环境</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">deactivate</span><br></code></pre></td></tr></table></figure></li><li><p>删除虚拟环境，其中 <code>&quot;--all&quot;</code> 指 <code>Remove all packages, i.e., the entire environment</code>.</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">conda <span class="hljs-built_in">remove</span> -n myenv <span class="hljs-comment">--all</span><br></code></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH 加速</title>
    <link href="/2022/01/03/github-accelerate/"/>
    <url>/2022/01/03/github-accelerate/</url>
    
    <content type="html"><![CDATA[<h1 id="github-ssh加速">github ssh加速</h1><h2 id="加速后的下载速度">加速后的下载速度</h2><p><img src="https://gitee.com/blackerrr/photos/raw/master/ssh_speed.jpg" /></p><h2 id="how-to-do">How to do?</h2><ol type="1"><li><p>首先你需要一个代理</p></li><li><p>查看自己socks5的端口</p><p><img src="https://gitee.com/blackerrr/photos/raw/master/socks5.jpg" /></p></li><li><p>运行如下命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git config --global http.https:<span class="hljs-regexp">//gi</span>thub.com.proxy socks5:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:你的端口号<br>git config --global https.https:<span class="hljs-regexp">//gi</span>thub.com.proxy socks5:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:你的端口号<br></code></pre></td></tr></table></figure><p>比如我的端口号是1081，那运行的是：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git config --global http.https:<span class="hljs-regexp">//gi</span>thub.com.proxy socks5:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">1081</span><br>git config --global https.https:<span class="hljs-regexp">//gi</span>thub.com.proxy socks5:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">1081</span><br></code></pre></td></tr></table></figure></li><li><p>试试速度</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Powershell 学习记录</title>
    <link href="/2021/12/31/powershell/"/>
    <url>/2021/12/31/powershell/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="powershell-学习记录">powershell 学习记录</h1><ol type="1"><li><h2 id="为什么不能使用rm--f-命令">为什么不能使用rm -f 命令</h2><p>对于 Remove-Item 的两个参数 -Force，-Filter都以F开头，所以参数没法简写为 -f。最简单的也要写成 -fo，即</p><p>rm -fo filename</p></li><li><h2 id="在powershell下如何删除隐藏文件">在powershell下如何删除隐藏文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">(base) PS D:\demo&gt; lla<br><br>    Directory: D:\demo<br><br>Mode                 LastWriteTime         Length Name<br>----                 -------------         ------ ----<br>d--h-          2021/12/31    15:14                .git<br>d----          2021/12/31    14:34                aa<br>-a---          2021/12/31    14:34              0 1.c<br>-a---          2021/12/31    14:32              0 a.txt<br>-a---          2021/12/31    15:06              0 new<br><br>(base) PS D:\demo&gt; rm -r -fo .\.git\<br></code></pre></td></tr></table></figure></li></ol><h1 id="如何在powershell自定义函数">如何在powershell自定义函数</h1><p>首先查看Microsoft.PowerShell_profile.ps1文件地址，然后打开编辑即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">(base) PS D:\demo&gt; <span class="hljs-variable">$PROFILE</span><br>C:\Users\LW\Documents\PowerShell\Microsoft.PowerShell_profile.ps1<br>(base) PS D:\demo&gt; code <span class="hljs-variable">$PROFILE</span><br></code></pre></td></tr></table></figure><p>如下图所示</p><p><img src="https://gitee.com/blackerrr/photos/raw/master/powershell.jpg" alt="编辑Microsoft.PowerShell_profile.ps1" /></p><h1 id="我的-powershell-profile文件">我的 powershell profile文件</h1><p>Github地址：<a href="https://github.com/Blackerrr/WindowPowerShellProfile.git">Blacerrr的repo</a></p><p>Gitee地址： <a href="https://gitee.com/blackerrr/WindowPowerShellProfile">Blackerrr的repo</a></p>]]></content>
    
    
    <categories>
      
      <category>PowerShell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 学习记录1</title>
    <link href="/2021/12/30/Git-Learning/"/>
    <url>/2021/12/30/Git-Learning/</url>
    
    <content type="html"><![CDATA[<h1 id="git-学习记录">Git 学习记录</h1><p>[TOC]</p><h2 id="删除远程仓库的分支">删除远程仓库的分支</h2><h3 id="git-push--h查看帮助"><code>git push -h</code>查看帮助</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">(base) PS D:\Blog\markdown&gt; git push -h<br>usage: git push [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;...]]<br><br>    -v, <span class="hljs-comment">--verbose         be more verbose</span><br>    -q, <span class="hljs-comment">--quiet           be more quiet</span><br>    <span class="hljs-comment">--repo &lt;repository&gt;   repository</span><br>    <span class="hljs-comment">--all                 push all refs</span><br>    <span class="hljs-comment">--mirror              mirror all refs</span><br>    -d, <span class="hljs-comment">--delete          delete refs</span><br>    <span class="hljs-comment">--tags                push tags (can&#x27;t be used with --all or --mirror)</span><br>    -n, <span class="hljs-comment">--dry-run         dry run</span><br>    <span class="hljs-comment">--porcelain           machine-readable output</span><br>    -f, <span class="hljs-comment">--force           force updates</span><br>    <span class="hljs-comment">--force-with-lease[=&lt;refname&gt;:&lt;expect&gt;]</span><br>                          <span class="hljs-built_in">require</span> old <span class="hljs-built_in">value</span> <span class="hljs-keyword">of</span> ref <span class="hljs-built_in">to</span> be <span class="hljs-keyword">at</span> this <span class="hljs-built_in">value</span><br>    <span class="hljs-comment">--force-if-includes   require remote updates to be integrated locally</span><br>    <span class="hljs-comment">--recurse-submodules (check|on-demand|no)</span><br>                          control recursive pushing <span class="hljs-keyword">of</span> submodules<br>    <span class="hljs-comment">--thin                use thin pack</span><br>    <span class="hljs-comment">--receive-pack &lt;receive-pack&gt;</span><br>                          receive pack program<br>    <span class="hljs-comment">--exec &lt;receive-pack&gt;</span><br>                          receive pack program<br>    -u, <span class="hljs-comment">--set-upstream    set upstream for git pull/status</span><br>    <span class="hljs-comment">--progress            force progress reporting</span><br>    <span class="hljs-comment">--prune               prune locally removed refs</span><br>    <span class="hljs-comment">--no-verify           bypass pre-push hook</span><br>    <span class="hljs-comment">--follow-tags         push missing but relevant tags</span><br>    <span class="hljs-comment">--signed[=(yes|no|if-asked)]</span><br>                          GPG sign <span class="hljs-keyword">the</span> push<br>    <span class="hljs-comment">--atomic              request atomic transaction on remote side</span><br>    -o, <span class="hljs-comment">--push-option &lt;server-specific&gt;</span><br>                          option <span class="hljs-built_in">to</span> transmit<br>    <span class="hljs-number">-4</span>, <span class="hljs-comment">--ipv4            use IPv4 addresses only</span><br>    <span class="hljs-number">-6</span>, <span class="hljs-comment">--ipv6            use IPv6 addresses only</span><br></code></pre></td></tr></table></figure><h3 id="删除分支">删除分支</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> -d repo_name<br></code></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> :repo_name<br></code></pre></td></tr></table></figure><p>第二条命令相当于推送一个空的分支到远程，可以实现和第一条命令同样的效果</p><h2 id="改变本地分支的名字">改变本地分支的名字</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git branch -m <span class="hljs-keyword">master</span> <span class="hljs-title">main</span><br></code></pre></td></tr></table></figure><p>将本地的master分支名字改为main</p><h2 id="删除本地分支的文件">删除本地分支的文件</h2><p>使用 <code>git rm，git rm -h</code> 查看帮助</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs smali">(base) PS D:\Blog\markdown&gt; git rm -h<br>usage: git rm [&lt;options&gt;] [--] &lt;file&gt;...<br><br>    -n, --dry-run         dry run<br>    -q, --quiet           do<span class="hljs-built_in"> not </span>list removed files<br>    --cached              only remove from the index<br>    -f, --force           override the up-to-date<span class="hljs-built_in"> check</span><br><span class="hljs-built_in"></span>    -r                    allow recursive removal<br>    --ignore-unmatch      exit with a zero status even<span class="hljs-built_in"> if </span>nothing matched<br>    --sparse              allow updating entries outside of the<span class="hljs-built_in"> sparse-checkout </span>cone<br>    --pathspec-from-file &lt;file&gt;<br>                          read pathspec from file<br>    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character<br></code></pre></td></tr></table></figure><h3 id="delete-files-from-repository-filesystem">Delete Files From Repository + Filesystem</h3><p><code>git rm = delete files from repository + filesystem</code></p><p><code>git rm filename</code></p><p>执行完<code>git rm</code> 之后文件首先会从本地删除，当你 commit 之后，文件就会从你的repository中删除</p><h3 id="delete-files-recursively-on-git">Delete Files Recursively on Git</h3><p><code>git rm -r folder</code></p><p>该命令可以递归删除文件夹。同样，执行之后首先会在本地删除，当完成push之后，文件夹就会从你的repository中删除</p><h3 id="delete-files-from-git-repository-only">Delete Files From Git Repository Only</h3><p><code>git rm --cached filename</code> 可以将文件从你的repository中删除，而在文件系统中保留文件。同样，要删除在远程仓库中的文件，push时必不可少的。</p><h3 id="delete-files-from-git-history">Delete Files From Git History</h3><p><code>git filter-branch -f --prune-empty --index-filter &quot;git rm -r --cached --ignore-unmatch ./file1&quot; HEAD</code></p><h2 id="git-如何删除已经-add的文件">Git 如何删除已经 add的文件</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git rm <span class="hljs-comment">--cached a.c</span><br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">(base) PS D:\speech <span class="hljs-keyword">signal</span> proceeding\speech_recognition&gt; <span class="hljs-keyword">New</span>-Item a.c<br><br>    Directory: D:\speech <span class="hljs-keyword">signal</span> proceeding\speech_recognition<br><br>Mode                 LastWriteTime         Length Name<br><span class="hljs-comment">----                 -------------         ------ ----</span><br>-a<span class="hljs-comment">---          2021/12/30    23:04              0 a.c</span><br><br>(base) PS D:\speech <span class="hljs-keyword">signal</span> proceeding\speech_recognition&gt; git add .\a.c<br>(base) PS D:\speech <span class="hljs-keyword">signal</span> proceeding\speech_recognition&gt; git status<br><span class="hljs-keyword">On</span> branch main<br>Changes <span class="hljs-keyword">to</span> be committed:<br>  (<span class="hljs-keyword">use</span> <span class="hljs-string">&quot;git restore --staged &lt;file&gt;...&quot;</span> <span class="hljs-keyword">to</span> unstage)<br>        <span class="hljs-keyword">new</span> <span class="hljs-keyword">file</span>:   a.c<br><br>(base) PS D:\speech <span class="hljs-keyword">signal</span> proceeding\speech_recognition&gt; git rm <span class="hljs-comment">--cached .\a.c</span><br>rm <span class="hljs-symbol">&#x27;a</span>.c&#x27;<br>(base) PS D:\speech <span class="hljs-keyword">signal</span> proceeding\speech_recognition&gt; git status<br><span class="hljs-keyword">On</span> branch main<br>Untracked files:<br>  (<span class="hljs-keyword">use</span> <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> <span class="hljs-keyword">to</span> include <span class="hljs-keyword">in</span> what will be committed)<br>        a.c<br><br>nothing added <span class="hljs-keyword">to</span> commit but untracked files present (<span class="hljs-keyword">use</span> <span class="hljs-string">&quot;git add&quot;</span> <span class="hljs-keyword">to</span> track)<br></code></pre></td></tr></table></figure><h2 id="git查看本地仓库文件">Git查看本地仓库文件</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git ls-tree -r <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure><h2 id="解决本地仓库和远程仓库没有一个共同的commitgit-pull-失败问题">解决本地仓库和远程仓库没有一个共同的commit，git pull 失败问题</h2><p>当在github上新建一个<code>repository</code>，仓库里只有一个<code>license</code>和<code>README.md</code>时，此时在本地仓库 执行<code>git pull origin main</code> 会出现报错。解决方法：</p><p><code>git pull origin master --allow-unrelated-histories</code></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UVA673题解</title>
    <link href="/2021/12/20/UVA673%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/12/20/UVA673%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="uva673">UVA673</h1><p><img src="https://gitee.com/blackerrr/photos/raw/master/uva673.png" alt="UVA673" /></p><p>这道题基本就是栈的表达式解析。<br />遇到<strong>左括号或者左方括号</strong>就压入栈。<br />遇到<strong>右括号或者右方括号</strong>，就从栈顶取出一个值，与该值对比。<br />注意当表达式为空时也是正确的。<br />注意在提取T后缓存区会有换行符，用 cin.ignore() 消除。</p><p>代码如下<br /><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">judge</span><span class="hljs-params">(<span class="hljs-keyword">char</span> t, <span class="hljs-keyword">char</span> x)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(t == <span class="hljs-string">&#x27;(&#x27;</span> &amp;&amp; x == <span class="hljs-string">&#x27;)&#x27;</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(t == <span class="hljs-string">&#x27;[&#x27;</span> &amp;&amp; x == <span class="hljs-string">&#x27;]&#x27;</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    <span class="hljs-keyword">int</span> t;<br>    cin&gt;&gt;t;<br>    cin.<span class="hljs-built_in">ignore</span>();<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        stack&lt;<span class="hljs-keyword">char</span>&gt; Q;<br>        string line;<br>        <span class="hljs-keyword">char</span> x, temp;<br>        <span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">getline</span>(cin, line);<br>        <span class="hljs-function">stringstream <span class="hljs-title">ss</span><span class="hljs-params">(line)</span></span>;<br>        <span class="hljs-keyword">while</span>(ss &gt;&gt; x)&#123;<br>            <span class="hljs-keyword">if</span>(x == <span class="hljs-string">&#x27;(&#x27;</span> || x == <span class="hljs-string">&#x27;[&#x27;</span>)&#123;<br>                Q.<span class="hljs-built_in">push</span>(x);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(Q.<span class="hljs-built_in">empty</span>())&#123;<br>                flag = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            temp = Q.<span class="hljs-built_in">top</span>();<br>            Q.<span class="hljs-built_in">pop</span>();<br>            <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">judge</span>(temp, x))&#123;<br>                flag = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag &amp;&amp; Q.<span class="hljs-built_in">empty</span>())<br>            cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>&lt;&lt;endl;<br>        <span class="hljs-keyword">else</span><br>            cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>斐波那契数列（特征方程， 通项公式， 公约数）</title>
    <link href="/2021/12/18/fibonacci/"/>
    <url>/2021/12/18/fibonacci/</url>
    
    <content type="html"><![CDATA[<h3 id="求特征方程">1、求特征方程</h3><p>设有数列 $ c[n] = a * c[n - 1] + b * c[n - 2]$, 假设存在 <span class="math inline">\(x, y\)</span> 满足下式<br /><span class="math display">\[c[n]-x*c[n - 1] = y*(c[n - 1] - x*c[n - 2])\]</span><br />变形得<br /><span class="math display">\[ c[n] = (x + y) * c[n - 1] -xy * c[n - 2]\]</span><br />则对于斐波那契数列则有<br /><span class="math display">\[\begin{eqnarray*}x + y &amp;=&amp; 1 \\-xy&amp;=&amp;1\end{eqnarray*}\]</span></p><p>消去 <span class="math inline">\(y\)</span> 得 <span class="math inline">\(x^2=x+1\)</span></p><p>有根<br /><span class="math display">\[X_{1,2}=\frac{1\pm\sqrt{5}}{2}\]</span></p><p>所以存在 <span class="math inline">\(A, B\)</span> 使<br /><span class="math display">\[c[n] = A \times \left( \frac{1 + \sqrt{5}}{2} \right) ^{n} - B \times \left( \frac{1 - \sqrt{5}}{2} \right) ^{n}\]</span><br />代入<span class="math inline">\(c[0] = 0, c[1] = 1\)</span>,得<br /><span class="math display">\[A = \frac{\sqrt{5}}{5}, B = - \frac{\sqrt{5}}{5}\]</span><br />即通项公式为<br /><span class="math display">\[c[n] = \frac{\sqrt{5}}{5} \times \left(\frac{1 + \sqrt{5}}{2}\right) ^ {n} - \frac{\sqrt{5}}{5} \times \left(\frac{1 - \sqrt{5}}{2}\right) ^ {n}\]</span></p><h5 id="tips">Tips</h5><blockquote><p>这公式一般不用再程序题中， 因为有无理数无法保证精度</p></blockquote><h3 id="公约数">2、公约数</h3><blockquote><p><span class="math display">\[gcd(F[n], F[m]) = F[gcd(n, m)]\]</span></p></blockquote><h4 id="证明">证明：</h4><p>设<span class="math inline">\(n &lt; m, F[n] = a, F[n + 1] = b\)</span>,则有<br /><span class="math display">\[\begin{eqnarray*}F[n + 2] &amp;=&amp; a + b \\F[n + 3] &amp;=&amp; a + 2b \\F[n + 4] &amp;=&amp; 2a + 3b\\F[n + 5] &amp;=&amp; 3a + 5b\\  \cdots &amp;=&amp; \cdots   \end{eqnarray*}\]</span><br />则有<br /><span class="math display">\[F[m] = F[m-n-1] \times F[n] + F[m-n] \times F[n+1]\]</span></p><p><span class="math display">\[gcd(F[n],F[m]) = gcd(F[n],  F[m - n -1] \times F[n] + F[m - n] \times F[n + 1] )\]</span></p><p>化简则有<br /><span class="math display">\[gcd(F[n], F[m]) = gcd(F[n],  F[m - n] \times F[n + 1] )\]</span><br />由于<br /><span class="math display">\[gcd(F[n], F[n + 1]) = 1\]</span><br />可得<br /><span class="math display">\[gcd(F[n], F[m]) = gcd(F[n],  F[m - n])\]</span><br />即<br /><span class="math display">\[gcd(F[n], F[m]) = gcd(F[n],  F[m \mod  n])\]</span></p><p>令<br /><span class="math display">\[m1 = m\mod n\]</span></p><p>有<br /><span class="math display">\[gcd(F[n], F[m]) = gcd(F[n \mod m1],  F[m1])\]</span><br />一直递归可得<br /><span class="math display">\[gcd(F[n], F[m]) = gcd(F[gcd(n, m)], 0)\]</span><br />所以有<br /><span class="math display">\[gcd(F[n], F[m]) = F[gcd(n, m)]\]</span></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>书籍记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二进制中1的个数</title>
    <link href="/2021/12/18/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <url>/2021/12/18/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="tips">Tips</h3><blockquote><p>《编程之美》 记录</p></blockquote><h4 id="解法一-除法">解法一 ： 除法</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dart"><br><span class="hljs-built_in">int</span> count(<span class="hljs-built_in">int</span> v)&#123;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">num</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(v)&#123;<br>        <span class="hljs-keyword">if</span>(v % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>            <span class="hljs-built_in">num</span>++;<br>        v /= <span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">num</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="解法二-位运算">解法二 ： 位运算</h4><blockquote><p>效率较解法 一 较高 ， 时间复杂度 O（log<sub>2</sub>n ）<br /><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-built_in">int</span> count(<span class="hljs-built_in">int</span> v)&#123;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">num</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(v)&#123;<br>        <span class="hljs-keyword">if</span>(v &amp; <span class="hljs-number">1</span>)<br>            <span class="hljs-built_in">num</span>++;<br>        v &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">num</span>;<br>&#125;<br></code></pre></td></tr></table></figure><br />#### 解法三<br />让算法复杂度只与 二进制数中 1 的个数有关， 当然最坏情况下 为 O(log<sub>2</sub>n)<br /><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-built_in">int</span> count(<span class="hljs-built_in">int</span> v)&#123;<br>    <span class="hljs-built_in">int</span> <span class="hljs-built_in">num</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(v)&#123;<br>        v = v &amp; (v - <span class="hljs-number">1</span>);  <span class="hljs-comment">// 依次将最右面的 1 消去</span><br>        <span class="hljs-built_in">num</span>++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">num</span>;<br>&#125;<br></code></pre></td></tr></table></figure><br />#### 解法四 : 分支运算<br />把所有结果都罗列出来， 不可取</p></blockquote><h4 id="解法五-查表">解法五 ： 查表</h4><blockquote><p>空间换时间， 复杂度O(1), 需谨慎使用, 以下为 0 到 255 的<br /><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>int countTable[<span class="hljs-number">256</span>] = &#123;<br><span class="hljs-built_in">    1,</span> <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>,<br><span class="hljs-built_in">    1,</span> <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>,<br><span class="hljs-built_in">    2,</span> <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<br><span class="hljs-built_in">    1,</span> <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>,<br><span class="hljs-built_in">    2,</span> <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<br><span class="hljs-built_in">    2,</span> <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<br><span class="hljs-built_in">    3,</span> <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>,<br><span class="hljs-built_in">    1,</span> <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>,<br><span class="hljs-built_in">    2,</span> <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<br><span class="hljs-built_in">    2,</span> <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<br><span class="hljs-built_in">    3,</span> <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>,<br><span class="hljs-built_in">    2,</span> <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,<br><span class="hljs-built_in">    3,</span> <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>,<br><span class="hljs-built_in">    3,</span> <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>,<br><span class="hljs-built_in">    4,</span> <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span><br>&#125;<span class="hljs-comment">;</span><br><br>int Count(int v)&#123;<br>    <span class="hljs-keyword">return</span> countTable(v)<span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>书籍记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python 语音识别</title>
    <link href="/2021/01/03/speech_recogniton/"/>
    <url>/2021/01/03/speech_recogniton/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="python-语音识别">Python 语音识别</h1><p>利用Pyqt5 设计UI界面。如下图：</p><p><img src="https://gitee.com/blackerrr/photos/raw/master/speech-ui.jpg" alt="UI界面" /></p><p>借助百度的api服务，普通话和英语在发音标准的情况下识别率可以在90%以上，但方言的识别效果不是很理想。</p><p>完整代码：</p><p>​ github仓库：<a href="https://github.com/Blackerrr/Speech-recognition">Blackerrr的repo</a></p><p>​ Gitee仓库：<a href="https://gitee.com/blackerrr/Speech-recognition">Blackerrr的repo</a></p><h1 id="记录一下在用python做语音识别时学到的东西">记录一下在用python做语音识别时学到的东西</h1><h2 id="pyinstaller-生成可执行文件">pyinstaller 生成可执行文件</h2><p><code>pyinstaller -F -w .\recognition.py</code></p><p>-<code>F</code> 表示生成单个可执行文件（<code>exe</code>）</p><p>-<code>w</code> 表示生成桌面程序，去掉命令行黑框</p><hr /><h2 id="利用pyuic5-将ui文件转为py文件">利用<code>pyuic5</code> 将<code>ui</code>文件转为<code>py</code>文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">pyuic5 -o destination.py source.ui<br></code></pre></td></tr></table></figure><p>其中<code>-o</code>表示生成一个文件</p><h2 id="ffmpeg-安装">ffmpeg 安装</h2><p>一个有效的教程： <a href="https://www.wikihow.com/Install-FFmpeg-on-Windows">How to install ffmpeg on windows</a></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
